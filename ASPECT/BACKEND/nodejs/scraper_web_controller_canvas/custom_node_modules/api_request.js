exports.apirequest={ API_Query_Get, API_Query_Post };
var querystring = require('querystring');
const { exec } = require("child_process");
 //https://nodejs.dev/making-http-requests-with-nodejs
function API_Query_Post(req, res) {
  let body = '';
  // very important to handle errors
  req.on('error', (err) => {
      if(err) {
          response.writeHead(500, {'Content-Type': 'text/html'});
          response.write('An error occurred');
          response.end();
      }q
  });
  // read chunks of POST data
  req.on('data', chunk => {
      body += chunk.toString();
  });
  // when complete POST data is received
  req.on('end', () => {
      // use parse() method
      body = querystring.parse(body);
      // { name: 'John', gender: 'MALE', email: 'john@gmail.com' }
     // console.log(body);
      console.log(body.command);
      ExecuteCommand(res,body.command);
      // rest of the code
  });
}
function ExecuteCommand(res,cmd)
{
    exec(cmd, (error, stdout, stderr) => {
        console.log(stdout);
		console.log("EXEC");
		if (error) {
			console.log('error: %s', error.message);        // A gerer comme pour les reponse correcte
			msg = error.message + "</br>";
        }
        else
        {
            if(stdout){
                console.log(stdout.length);
                var reponse=stdout;
                reponse=remove_linebreaks(reponse);
                res.writeHead(200, { 'Content-Type': 'text/html' });
                res.write(reponse);
                res.end();
            }
        }
	})
}
function remove_linebreaks(  str ) { 
    return str.replace( /[\r\n]+/gm, "<br>" ); 
} 
function API_Query_Get(req, res) {
    const myURL = new URL(req.url.toString(), 'http://localhost:8080/');
    console.log(myURL.searchParams.get('command'));
    var cmd=myURL.searchParams.get('command');
    if(cmd==="dir"){
        cmd="echo %cd%";
    }
    exec(cmd, (error, stdout, stderr) => {
        console.log(stdout);
		console.log("EXEC");
		if (error) {
			console.log('error: %s', error.message);        // A gerer comme pour les reponse correcte
			msg = error.message + "</br>";
        }
        else
        {
            if(stdout){
                console.log(stdout.length);
                var reponse=stdout;
                reponse=remove_linebreaks(reponse);
                res.writeHead(200, { 'Content-Type': 'text/html' });
                res.write(reponse);
                res.end();
            }
        }
	})
}